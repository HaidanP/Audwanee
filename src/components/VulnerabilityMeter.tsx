import React from 'react';
import { Shield, AlertTriangle, AlertCircle } from 'lucide-react';

interface VulnerabilityMeterProps {
  risk: 'low' | 'medium' | 'high';
  score: number;
}

export const VulnerabilityMeter: React.FC<VulnerabilityMeterProps> = ({ risk, score }) => {
  const getRiskConfig = () => {
    switch (risk) {
      case 'low':
        return {
          color: 'text-emerald-700',
          bgColor: 'bg-emerald-50',
          borderColor: 'border-emerald-200',
          progressColor: 'bg-emerald-500',
          icon: Shield,
          label: 'Low Risk',
          description: 'Process-Based & Specific'
        };
      case 'medium':
        return {
          color: 'text-amber-700',
          bgColor: 'bg-amber-50',
          borderColor: 'border-amber-200',
          progressColor: 'bg-amber-500',
          icon: AlertTriangle,
          label: 'Medium Risk',
          description: 'Some Vulnerabilities Present'
        };
      case 'high':
        return {
          color: 'text-red-700',
          bgColor: 'bg-red-50',
          borderColor: 'border-red-200',
          progressColor: 'bg-red-500',
          icon: AlertCircle,
          label: 'High Risk',
          description: 'Generic & Product-Based'
        };
    }
  };

  const config = getRiskConfig();
  const IconComponent = config.icon;

  return (
    <div className={`p-8 rounded-2xl border ${config.borderColor} ${config.bgColor} shadow-lg bg-white/95 backdrop-blur-sm`}>
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center space-x-4">
          <div className={`p-4 rounded-xl bg-white shadow-md`}>
            <IconComponent className={`w-10 h-10 ${config.color}`} />
          </div>
          <div>
            <h3 className={`text-2xl font-bold ${config.color}`}>
              {config.label}
            </h3>
            <p className={`text-sm ${config.color} opacity-75 mt-1`}>
              {config.description}
            </p>
          </div>
        </div>
        <div className="text-center">
          <div className={`text-4xl font-bold ${config.color} mb-1`}>
            {score}%
          </div>
          <div className={`text-sm ${config.color} opacity-60 font-medium`}>
            Risk Score
          </div>
        </div>
      </div>
      
      <div>
        <div className="w-full bg-white rounded-full h-4 shadow-inner border border-gray-200">
          <div
            className={`h-4 rounded-full transition-all duration-1000 ease-out ${config.progressColor} shadow-sm`}
            style={{ width: `${score}%` }}
          ></div>
        </div>
      </div>
    </div>
  );
};